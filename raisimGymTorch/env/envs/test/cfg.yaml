realistic: True   # if True, consider wait_time for realistic visualization
plot_command: False
logging: False

# Path configuration
path:
  home: '' # TODO: PATH_SETUP_REQUIRED # ex) /home/me/raisim/raisimLib/complex-env-navigation/
  command_tracking: data/command_tracking_flat/final/full_16200.pt
  FDM: data/FDM_train/final/full_1500.pt
  ITS: data/ITS_train/final/full_450.pt

# Environment configuration
environment:
  render: True  # Must be true
  visualize_path: False
  harsh_termination: False  # True: reset if contact occurs other than the feet / False: reset if contact occurs with the base or hip
  evaluate: True
  determine_env: 0  # not used
  num_envs: 1
  seed:
    train: 0   # not used
    validate: 300 
    evaluate: 600
  num_threads: 4 #12
  simulation_dt: 0.0025
  control_dt: 0.01
  command:
    forward_vel:
      min: -1.0
      max: 1.0
    lateral_vel:
      min: -0.4
      max: 0.4
    yaw_rate:
      min: -1.2
      max: 1.2
  test_obstacle_grid_size: 2.3  # 2.3 / 3.0 / 4.0 / 5.0
  test_obstacle_size: # cylinder: radius (min ~ max) / box: side length (min*2 ~ max*2)
    min: 0.05  # 0.3
    max: 1.0  # 0.5
  test_obstacle_randomness:
    min: 0.1
    max: 0.9
  test_initialize:
    point_goal: True
    safety_control: False
  n_goals_per_env: 8
  n_evaluate_envs: 60
  analytic_planner:
    run: True
    visualize: True
    n_waypoints: 2
    planning_time: 7  # [s]

# Velocity command tracking controller configuration
command_tracking:
  command_period: 0.5
  architecture: [128, 128]

# Forward Dynamics Model (FDM) configuration
environment_model:
  architecture:
    COM_encoder:
      naive:
        input: 9   # body_orientation + vel + ang_vel
        time_step: 10  # 0.5 [s]
        update_period: 0.05  # [s]
    state_encoder: # state = lidar + (encoded COM history)
      input: 450  # COM_encoder output is included in the input  (360 + 32)
      output: 100
      shape: [ 256, 256, 128, 128 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    command_encoder:
      input: 3
      output: 64
      shape: [ 32 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    recurrence:
      input: 64
      hidden: 100
      layer: 2
      dropout: 0.2
    traj_predictor:
      input: 100
      shape: [ 64, 32, 16 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
      collision:
        output: 1
      coordinate:
        output: 2

# Informed Trajectory Sampler (ITS) configuration
# And
# Model-predictive control configuration for Point-Goal Navigation
CVAE_path_track:
  planner:
    prediction_period: 6.0
    wo_CVAE_number_of_sample: 729
    CVAE_number_of_sample: 100
    gamma: 10
    wo_CVAE_beta: 0.4
    CVAE_beta: 0.0
    sigma: 0.3
    number_of_bin: 9  # only used for command_sampler not using ITS
  architecture:
    latent_dim: 16
    state_encoder: # state = lidar + (encoded COM history)
      input: 450  # COM_encoder output is included in the input  (360 + 32)
      output: 100
      shape: [ 256, 256, 128, 128 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    waypoint_encoder:
      input: 2
      output: 64
      shape: [ 32 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    command_encoder:
      input: 3
      output: 64
      shape: [ 32 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    waypoint_recurrence_encoder:
      input: 64
      hidden: 100
      layer: 1
      dropout: 0.0  # just available when n_layer > 1
    command_recurrence_encoder:
      input: 64
      hidden: 100
      layer: 1
      dropout: 0.0  # just available when n_layer > 1
    latent_encoder:
      input: 300  # 100 (encoded_state) + 100 (encoded_waypoints) + 100 (encoded_command_traj)
      output: 16  # latent dimension (model outputs 'mean' and 'log_std' each of corresponding size'
      shape: [ 64, 32 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    latent_decoder:
      input: 216  # 100 (encoded_state) + 100 (encoded_waypoints) + 16
      shape: [ 64, 64 ]
      output: 32
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True
    recurrence_decoder:
      input: 32  # input and hidden(output) size should be sames because recursive process happens (check other good method)
      hidden: 32
      layer: 1
      dropout: 0.0  # just available when n_layer > 1
    command_decoder:
      input: 32
      output: 3
      shape: [ 32 ]
      activation: leakyrelu
      dropout: 0.2
      batchnorm: True

# Model-predictive control configuration for Safety-Remote Control
Naive:
  planner:
    prediction_period: 6.0
    number_of_sample: 1000
    gamma: 10
    beta: 0.4
    sigma: 0.3
    number_of_bin: 10
